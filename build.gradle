import com.github.kr328.plugin.riru.CMakePlugin
import com.github.kr328.plugin.riru.MagiskPlugin
import com.github.kr328.plugin.riru.SignaturePlugin
import com.github.kr328.plugin.riru.TransformDexPlugin
import com.github.kr328.plugin.riru.utils.AndroidUtils
import com.github.kr328.plugin.riru.utils.PathUtils

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: CMakePlugin
apply plugin: TransformDexPlugin
apply plugin: MagiskPlugin
apply plugin: SignaturePlugin;

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main.compileClasspath += project(":classpath").files("src/main/java") // for hidden api
    main.compileClasspath += files(AndroidUtils.androidJarPath("android-28")) //android.jar
}

compileJava {
    destinationDir file(PathUtils.toLocalSeparator("$buildDir/intermediate/classes"))
}

cmake {
    source 'src/main/cpp'
    abiFilter "armeabi-v7a" ,"arm64-v8a"
    platform "android-21"
}

dex {
    buildToolsVersion "28.0.3"
    compilePlatform "android-28"
    output "boot-start-activity-confirm.jar"
}

magisk {
    output file("$buildDir/outputs/riru-start-activity-confirm.zip")
    
    map file("$buildDir/outputs/dex/") ,"system/framework/"
    map file("$buildDir/outputs/cmake/armeabi-v7a/shared") ,"system/lib"
    map file("$buildDir/outputs/cmake/arm64-v8a/shared")   ,"system/lib64"
    map file("src/main/raw/magisk") ,""
}

signature {
    targetFile file("$buildDir/outputs/riru-start-activity-confirm.zip")
    buildToolsVersion "28.0.3"
    
    keyStore file("release.keystore")
    keyStorePassword "android"
    alias "androiddebugkey"
    aliasPassword "android"
}

task cleanAll(type: Delete) {
    delete "build" ,"out"
    delete PathUtils.toLocalSeparator("buildSrc/build") ,PathUtils.toLocalSeparator("buildSrc/out")
    delete PathUtils.toLocalSeparator("classpath/build") ,PathUtils.toLocalSeparator("classpath/out")
}

dependencies {
    compileOnly project(":classpath")
}

signatureOutput.dependsOn(buildMagiskModule)
assemble.dependsOn.clear()
build.dependsOn.clear()
assemble.dependsOn(cmakeBuild ,transformDex ,buildMagiskModule ,signatureOutput)
build.dependsOn(assemble)
clean.dependsOn(cleanAll)
